/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseKGroup(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
    	ListNode res(-1);
        res.next = head;
        ListNode* prev = &res,*p = res.next;
        int cnt = 1;
        while(p != NULL)
        {
            if(cnt%k == 0)
            {
            	reverse_range(prev, p->next, p);
            	prev = p;
            }
            p = p->next;
            cnt++;
        }
        return res.next;
    }
    void reverse_range(ListNode* prev,ListNode* end,ListNode*& p)
    {
        ListNode* last = prev->next;
        ListNode* cur = last->next;
        while(cur != end)
        {
            last->next = cur->next;
            cur->next = prev->next;
            prev->next = cur;
            cur = last->next;
        }
        p = last;
    }
};
