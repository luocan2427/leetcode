/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int i = 1;
        ListNode* prev,* cur = head, *tail,* now = NULL;
        while(i < n+1)
        {
            if(i == m-1) tail = cur;
            if(i == m) prev = cur;
            ListNode* tmp = cur;
            cur = cur->next;
            if(i >= m)
            {
                tmp->next = now;
                now = tmp;
            }
            i++;
        }
        prev->next = cur;
        if(m == 1)
            return now;
        else
            tail->next = now;
        return head;
    }
};
