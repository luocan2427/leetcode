class Solution {
public:
    int largestRectangleArea(vector<int> &height) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(height.size() == 0)
        {
            return 0;
        }
        stack<pair<int,int> > stk;
        stk.push(make_pair(height[0],0));
        int max = 0;
        for(int i = 1;i <= height.size();i++)
        {
            if(i == height.size() || height[i] < stk.top().first)
            {
                while(!stk.empty() && (i == height.size() || stk.top().first > height[i]))
                {
                    int temp1 = stk.top().first;
                    int temp2 = stk.top().second;
                    stk.pop();
                    if(!stk.empty())
                    {
                        if(temp1*(i-stk.top().second-1) > max)
                        {
                            max = temp1*(i-stk.top().second-1);
                        }
                    }
                    else
                    {
                        if(temp1*(i) > max)
                        {
                            max = temp1*(i);
                        }
                    }
                }
            }
            if(i < height.size())
            {
                stk.push(make_pair(height[i],i));
            }
        }
        return max;
    }
};
