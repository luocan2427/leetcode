class Solution {
public:
    vector<int> spiralOrder(vector<vector<int> > &matrix) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
    	vector<int> result;
	if (matrix.empty()) 
        {
            return result;
        }
	int beginX = 0, endX = matrix[0].size()-1;
	int beginY = 0, endY = matrix.size()-1;
	while (true) 
        {
		for (int i = beginX; i <= endX; i++)
		{
			result.push_back(matrix[beginY][i]);
		}
		if (++beginY > endY) break;
		for (int i = beginY; i <= endY; i++)
		{
			result.push_back(matrix[i][endX]);
		}
		if (beginX > --endX) break;
		for (int i = endX; i >= beginX; i--)
		{
			result.push_back(matrix[endY][i]);
		}
		if (beginY > --endY) break;
		for (int i = endY; i >= beginY; i--)
		{
			result.push_back(matrix[i][beginX]);
		}
		if (++beginX > endX) break;
	}
	return result;
    }
};