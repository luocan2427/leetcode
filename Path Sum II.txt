/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > pathSum(TreeNode *root, int sum) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<int> > res;
        vector<int> cur;
        if(root != NULL)
            hasPathSum(res,cur,root,sum);
        return res;
    }
    void hasPathSum(vector<vector<int> > &res,vector<int> cur,TreeNode *root, int sum) {
        cur.push_back(root->val);
        if(root->left != NULL)
            hasPathSum(res,cur,root->left,sum-root->val);
        if(root->right != NULL)
            hasPathSum(res,cur,root->right,sum-root->val);
        if(root->left == NULL && root->right == NULL && sum == root->val)
            res.push_back(cur);
    }
};
