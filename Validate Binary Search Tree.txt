/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int low,high;
        return checker(root,low,high);
    }
    bool checker(TreeNode *root,int &low,int &high)
    {
        if(root == NULL)
        {
            low = 1000000;
            high = -1000000;
            return true;
        }
        int low1,low2,high1,high2;
        if(checker(root->left,low1,high1) && checker(root->right,low2,high2) && (high1 == -1000000 || high1 < root->val) && (low2 == 1000000 || low2 > root->val))
        {
            low = min(low1,root->val);
            high = max(high2,root->val);
            return true;
        }
        else
        {
            return false;
        }
    }
};
