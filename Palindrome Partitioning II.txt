bool dp[2000][2000] = {0};
class Solution {
public:
    int minCut(string s) {
        int n = s.size();
        int b,t;
        //memset(dp,false,sizeof(dp));
        for(int i = 0;i < 2000;i++)
        {
            for(int j = 0;j < 2000;j++)
            {
                dp[i][j] = 0;
            }
        }
        for(int i = 0;i < n;i++)
        {
            b = i;
            t = i;
            while(b >= 0 && t <= n-1)
            {
                if(s[b] == s[t])
                {
                    dp[b][t] = true;
                    b--;t++;
                }
                else
                {
                    break;
                }
            }
            
            b = i;
            t = i+1;
            while(b >= 0 && t <= n-1)
            {
                if(s[b] == s[t])
                {
                    dp[b][t] = true;
                    b--;t++;
                }
                else
                {
                    break;
                }
            }
        }
        int dp2[2000] = {0};
        dp2[0] = -1;
        for(int i = 2;i <= n;i++)
        {
            int min = 10000;
            for(int j  = i;j > 0;j--)
            {
                if(dp[j-1][i-1] == 1 && min > dp2[j-1]+1)
                {
                    min = dp2[j-1]+1;
                }
            }
            dp2[i] = min;
        }
        return dp2[n];
    }
};