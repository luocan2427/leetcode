/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        rotate(root->right);
        return isSameTree(root->left,root->right);
    }
    void rotate(TreeNode *root)
    {
        if(root == NULL) return;
        TreeNode *temp = root->right;
        root->right = root->left;
        root->left = temp;
        rotate(root->left);
        rotate(root->right);
    }
    bool isSameTree(TreeNode *p, TreeNode *q) {
        if(p == NULL && q == NULL)
            return true;
        else if(p == NULL || q == NULL)
            return false;
        else
            return p->val == q->val && isSameTree(p->left,q->left) && isSameTree(p->right,q->right);
    }
};
