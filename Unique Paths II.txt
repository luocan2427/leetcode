class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<int> > dp(obstacleGrid.size()+1, vector<int>(obstacleGrid[0].size()+1,0));
        if(obstacleGrid[obstacleGrid.size()-1][obstacleGrid[0].size()-1] == 0)
            dp[obstacleGrid.size()-1][obstacleGrid[0].size()-1] = 1;
        for(int i = obstacleGrid.size()-1;i >= 0;i--)
            for(int j = obstacleGrid[0].size()-1;j >= 0;j--)
                if(obstacleGrid[i][j] != 1 && (i != obstacleGrid.size()-1 || j != obstacleGrid[0].size()-1))
                    dp[i][j] = dp[i+1][j]+dp[i][j+1];
        return dp[0][0];
    }
};
