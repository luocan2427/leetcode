class Solution {
public:
    vector<string> letterCombinations(string digits) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<string> res;
        string cur = "";
        vector<vector<char> > map({{'a','b','c'},{'d','e','f'},{'g','h','i'},{'j','k','l'},{'m','n','o'},{'p','q','r','s'},{'t','u','v'},{'w','x','y','z'}});
        dfs(digits,0,res,cur,map);
        return res;
    }
    void dfs(string &digits,int depth,vector<string> &res,string cur,vector<vector<char> > &map)
    {
        if(depth == digits.size())
        {
            res.push_back(cur);
        }
        else
        {
            for(int i = 0;i < map[digits[depth]-'2'].size();i++)
            {
                dfs(digits,depth+1,res,cur+map[digits[depth]-'2'][i],map);
            }
        }
    }
};
