int dp[2][1000];
class Solution {
public:
    int minPathSum(vector<vector<int> > &grid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(grid.size() == 0 || grid[0].size() == 0)
            return 0;
        for(int i = grid.size()-1;i >= 0;i--)
            for(int j = grid[0].size()-1;j >= 0;j--)
            {
                if(i+1 == grid.size() && j+1 == grid[0].size())
                    dp[i%2][j] = grid[i][j];
                else if(i+1 == grid.size())
                    dp[i%2][j] = dp[i%2][j+1]+grid[i][j];
                else if(j+1 == grid[0].size())
                    dp[i%2][j] = dp[(i+1)%2][j]+grid[i][j];
                else
                    dp[i%2][j] = min(dp[i%2][j+1],dp[(i+1)%2][j])+grid[i][j];
            }
        return dp[0][0];
    }
};
