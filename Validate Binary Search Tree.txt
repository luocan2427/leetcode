/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int temp,tmp;
        if(root == NULL)
        {
            return 1;
        }
        return isBST(root,temp,tmp);
    }
    bool isBST(TreeNode *root,int &maxnode,int &minnode)
    {
        maxnode = root->val;
        minnode = root->val;
        int lmax,lmin,rmax,rmin;
        bool left,right;
        if(root->left != NULL)
        {
            left = isBST(root->left,lmax,lmin);
            maxnode = max(maxnode,lmax);
            minnode = min(minnode,lmin);
        }
        if(root->right != NULL) 
        {
            right = isBST(root->right,rmax,rmin);
            maxnode = max(maxnode,rmax);
            minnode = min(minnode,rmin);
        }
        if((root->left == NULL || lmax < root->val) && (root->right == NULL || rmin > root->val))
        {
            return (root->left == NULL || left == 1) && (root->right == NULL || right == 1);
        }
        return 0;
    }
};