class Solution {
public:
    vector<vector<int> > fourSum(vector<int> &num, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        sort(num.begin(), num.end());
        vector<vector<int> > ans;
        for(int i = 0;i < num.size();i++) 
        {
            if(i > 0 && num[i] == num[i-1]) 
            {
                continue;
            }
            for(int j = i+1;j < num.size();j++) 
            {
                if (j-1 > i && num[j] == num[j-1]) 
                {
                    continue;
                }                                
                for(int k = j+1;k < num.size();k++)
                {
                    if (k-1 > j && num[k] == num[k-1])
                    {
                        continue;
                    }
                    int l = target-num[i]-num[j]-num[k];
                    int left = k+1,right = num.size()-1,mid = 0;
                    while(left <= right) 
                    {
                        mid = (left+right)/2;
                        if(num[mid] > l) 
                        {
                            right = mid-1;
                        } 
                        else if(num[mid] == l) 
                        {
                            vecto<int> temp({num[i],num[j],num[k],num[mid]});
                            ans.push_back(temp);
                            break;
                        }
                        else
                        {
                            left = mid+1;
                        }                
                    }
                }                
            }
        }
        return ans;
    }
};
