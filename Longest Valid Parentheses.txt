class Solution {
public:
    int longestValidParentheses(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        stack<pair<char,int> > stk;
        for(int i = 0;i < s.size();i++)
        {
            if(s[i] == ')' && !stk.empty() && stk.top().first == '(')
                stk.pop();
            else
                stk.push(make_pair(s[i],i));
        }
        int res = 0,cur = s.size();
        while(!stk.empty())
        {
            res = max(res,cur-stk.top().second-1);
            cur = stk.top().second;
            stk.pop();
        }
        res = max(res,cur);
        return res;
    }
};
