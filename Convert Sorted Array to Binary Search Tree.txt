/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *sortedArrayToBST(vector<int> &num) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        return toBST(num,0,num.size()-1);
    }
    TreeNode *toBST(vector<int> &num,int b,int t)
    {
        if(b > t)
            return NULL;
        if(b == t)
        {
            TreeNode *root = new TreeNode(num[b]);
            return root;
        }
        TreeNode *root = new TreeNode(num[(b+t)/2]);
        root->left = toBST(num,b,(b+t)/2-1);
        root->right = toBST(num,(b+t)/2+1,t);
        return root;
    }
};
