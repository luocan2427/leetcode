/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(root == NULL)
        {
            return 1;
        }
        rotate(root->right);
        return isSameTree(root->left,root->right);
    }
    void rotate(TreeNode *root)
    {
        if(root == NULL)
        {
            return;
        }
        TreeNode *temp = root->right;
        root->right = root->left;
        root->left = temp;
        rotate(root->left);
        rotate(root->right);
    }
    bool isSameTree(TreeNode *p, TreeNode *q) 
    {
        if(p == NULL && q == NULL)
        {
            return 1;
        }
        if((p != NULL && q == NULL) || (p == NULL && q != NULL))
        {
            return 0;
        }
        if(p->val == q->val)
        {
            return isSameTree(p->left,q->left) && isSameTree(p->right,q->right);
        }
        else
        {
            return 0;
        }
    }
};