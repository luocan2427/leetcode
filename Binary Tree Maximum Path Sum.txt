/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int maxPath = root->val;
        maxSum(root, maxPath);
        return maxPath;
    }
    
    int maxSum(TreeNode *root, int &maxPath)
    {
        if(root == NULL)
        {
            return 0;
        }
        int left = maxSum(root->left,maxPath);
        int right = maxSum(root->right,maxPath);
        int res = root->val;
        int tmp = root->val;
        res += max(0,max(left,right));
        tmp += max(0,left)+max(0,right);
        maxPath = max(tmp,maxPath);
        return res;
    }
};
