/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(root == NULL)
        {
            return;
        }
        TreeNode *tmp;
        flater(root,tmp);
    }
    void flater(TreeNode *root,TreeNode *&tail)
    {
        TreeNode *temp1,*temp2,*left,*right;
        tail = root;
        left = root->left;
        right = root->right;
        root->left = NULL;
        root->right = NULL;
        if(left != NULL)
        {
            flater(left,temp1);
            tail->right = left;
            tail = temp1;
        }
        if(right != NULL)
        {
            flater(right,temp2);
            tail->right = right;
            tail = temp2;
        }
    }
};
