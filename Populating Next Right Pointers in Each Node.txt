/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        queue<pair<TreeLinkNode *, int> > myque;
        myque.push(make_pair(root,-1));
        int cur = 0;
        TreeLinkNode *pre = root;
        while(!myque.empty())
        {
            pair<TreeLinkNode *, int> tmp = myque.front();
            myque.pop();
            if(tmp.first != NULL)
            {
                if(cur == tmp.second && tmp.first != root)
                    pre->next = tmp.first;
                else
                    pre->next = NULL;
                cur = tmp.second;
                pre = tmp.first;
                myque.push(make_pair(tmp.first->left,tmp.second+1));
                myque.push(make_pair(tmp.first->right,tmp.second+1));
            }
        }
        if(pre != NULL)
            pre->next = NULL;
    }
};
