unordered_map<int,int> dpmap;
class Solution {
public:
    int numDecodings(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        dpmap.clear();
        if(s == "")
        {
            return 0;
        }
        return dp(0,s);
    }
    int dp(int n,string &s)
    {
        if(dpmap.find(n) != dpmap.end())
        {
            return dpmap[n];
        }
        if(n >= s.size())
        {
            dpmap[n] = 1;
            return 1;
        }
        if(s[n] == '0')
        {
            dpmap[n] = 0;
            return 0;
        }
        int res = dp(n+1,s);
        if(n+1 < s.size() && (s[n]-'0')*10+s[n+1]-'0' <= 26)
        {
            res += dp(n+2,s);
        }
        dpmap[n] = res;
        return res;
    }
};
