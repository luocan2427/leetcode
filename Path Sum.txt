/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode *root, int sum) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(root == NULL)
        {
            return 0;
        }
        return hasSum(root,sum);
    }
    bool hasSum(TreeNode * root, int sum)
    {
        if(root->left == NULL && root->right != NULL)
        {
            return hasSum(root->right,sum-root->val);
        }
        else if(root->left != NULL && root->right == NULL)
        {
            return hasSum(root->left,sum-root->val);
        }
        else if(root->left != NULL && root->right != NULL)
        {
            return hasSum(root->left,sum-root->val) || hasSum(root->right,sum-root->val);
        }
        else
        {
            if(sum == root->val) return 1;
            else return 0;
        }
    }
};