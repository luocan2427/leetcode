/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *rotateRight(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (head == NULL)
            return NULL;
            
        int len = listLen(head);
        
        k = k % len;
        
        if (k == 0)
        {
            return head;
        }
        ListNode *p = head;
        ListNode *pPre = NULL;
        for(int i = 0; i < len - k; i++)
        {
            pPre = p;
            p = p->next;
        }
        ListNode *q = p;
        while(q->next)
        {
            q = q->next;
        }   
        if (pPre)
        {
            pPre->next = NULL;
        }   
        q->next = head;        
        return p;
    }
    int listLen(ListNode *node)
    {
        int len = 0;
        while(node)
        {
            len++;
            node = node->next;
        }
        return len;
    }
};