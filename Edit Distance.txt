int dp[1000][1000];
class Solution {
public:
    int minDistance(string word1, string word2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = word1.size();
        int m = word2.size();
        dp[n][m] = 0;
        for(int i = 0;i < n;i++)
        {
            dp[i][m] = n-i;
        }
        for(int j = 0;j < m;j++)
        {
            dp[n][j] = m-j;
        }
        for(int i = n-1;i >= 0;i--)
        {
            for(int j = m-1;j >= 0;j--)
            {
                if(word1[i] == word2[j])
                {
                    dp[i][j] = dp[i+1][j+1];
                }
                else
                {
                    dp[i][j] = min(dp[i][j+1],dp[i+1][j]);
                    dp[i][j] = min(dp[i][j],dp[i+1][j+1])+1;
                }
            }
        }
        return dp[0][0];
    }
};