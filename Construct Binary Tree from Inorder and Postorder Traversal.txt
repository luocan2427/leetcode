/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *buildTree(vector<int> &inorder, vector<int> &postorder) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        TreeNode *root = NULL;
        TreeNode **cur = &root;
        stack<TreeNode *> stk;
        for(int i = postorder.size()-1, j = i;i >= 0;i--)
        {
            *cur = new TreeNode(postorder[i]);
            stk.push(*cur);
            cur = &((*cur)->right);
            while(!stk.empty() && stk.top()->val == inorder[j])
            {
                cur = &(stk.top()->left);
                stk.pop();
                j--;
            }
        }
        return root;
    }
};
