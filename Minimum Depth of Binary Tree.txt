class Solution {
public:
    int minDepth(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(root == NULL)
        {
            return 0;
        }
        int res = 1000000;
        queue<pair<int,TreeNode*> > que;
        que.push(make_pair(1,root));
        while(!que.empty())
        {
            pair<int,TreeNode*> tmp = que.front();
            que.pop();
            if(tmp.second->left == NULL && tmp.second->right == NULL)
            {
                res = min(res,tmp.first);
            }
            if(tmp.second->left != NULL && tmp.first < res)
            {
                que.push(make_pair(tmp.first+1,tmp.second->left));
            }
            if(tmp.second->right != NULL && tmp.first < res)
            {
                que.push(make_pair(tmp.first+1,tmp.second->right));
            }
        }
        return res;
    }
};
