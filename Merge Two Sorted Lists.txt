/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode *temp1 = l1;
        ListNode *temp2 = l2;
        ListNode *head;
        ListNode *tail;
        if(temp1 == NULL)
        {
            return temp2;
        }
        if(temp2 == NULL)
        {
            return temp1;
        }
        if(l1->val < l2->val)
        {
            head = l1;
            tail = l1;
            temp1 = temp1->next;
        }
        else
        {
            head = l2;
            tail = l2;
            temp2 = temp2->next;
        }
        while(temp1 != NULL && temp2 != NULL)
        {
            if(temp1->val < temp2->val)
            {
                tail->next = temp1;
                tail = temp1;
                temp1 = temp1->next;
            }
            else
            {
                tail->next = temp2;
                tail = temp2;
                temp2 = temp2->next;
            }
        }
        if(temp1 == NULL)
        {
            tail->next = temp2;
        }
        else
        {
            tail->next = temp1;
        }
        return head;
    }
};